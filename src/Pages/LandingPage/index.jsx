import React from 'react';
import { Link } from 'react-router-dom';
import {
  Trophy,
  BookOpen,
  Target,
  PenTool,
  MessageSquare,
  Award,
  Zap,
  Users,
  Sparkles,
  ArrowRight,
  TrendingUp,
  CheckCircle,
  Star,
  Quote,
  Rocket,
  Brain,
  Globe,
} from 'lucide-react';

const LandingPage = () => {
  const features = [
    {
      icon: BookOpen,
      title: 'T·ª´ v·ª±ng',
      description: 'H·ªçc t·ª´ v·ª±ng qua flashcard, h√¨nh ·∫£nh sinh ƒë·ªông v√† b√†i t·∫≠p t∆∞∆°ng t√°c',
      color: 'text-primary',
      bgColor: 'bg-primary/10',
      borderColor: 'hover:border-primary',
    },
    {
      icon: Target,
      title: 'Ng·ªØ ph√°p',
      description: 'B√†i gi·∫£ng chi ti·∫øt v√† b√†i t·∫≠p th·ª±c h√†nh t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao',
      color: 'text-secondary',
      bgColor: 'bg-secondary/10',
      borderColor: 'hover:border-secondary',
    },
    {
      icon: PenTool,
      title: 'Luy·ªán vi·∫øt',
      description: 'Nh·∫≠n ph·∫£n h·ªìi t·ª´ AI v√† g·ª£i √Ω c·∫£i thi·ªán k·ªπ nƒÉng vi·∫øt c·ªßa b·∫°n',
      color: 'text-green-600',
      bgColor: 'bg-green-50',
      borderColor: 'hover:border-green-600',
    },
    {
      icon: MessageSquare,
      title: 'Di·ªÖn ƒë√†n',
      description: 'K·∫øt n·ªëi v·ªõi c·ªông ƒë·ªìng h·ªçc vi√™n, chia s·∫ª kinh nghi·ªám v√† h·ªçc h·ªèi',
      color: 'text-purple-600',
      bgColor: 'bg-purple-50',
      borderColor: 'hover:border-purple-600',
    },
  ];

  const gamificationFeatures = [
    {
      icon: Trophy,
      title: 'XP & Level',
      description: 'Ki·∫øm ƒëi·ªÉm kinh nghi·ªám v√† thƒÉng c·∫•p qua m·ªói b√†i h·ªçc',
    },
    {
      icon: Award,
      title: 'Huy hi·ªáu',
      description: 'Thu th·∫≠p h∆°n 50+ huy hi·ªáu th√†nh t√≠ch ƒë·∫∑c bi·ªát',
    },
    {
      icon: Zap,
      title: 'Streak & Stats',
      description: 'Duy tr√¨ chu·ªói ng√†y h·ªçc v√† theo d√µi b√°o c√°o chi ti·∫øt',
    },
  ];

  const stats = [
    { icon: Users, value: '10,000+', label: 'H·ªçc vi√™n' },
    { icon: Award, value: '50+', label: 'Huy hi·ªáu' },
    { icon: Sparkles, value: '100%', label: 'Mi·ªÖn ph√≠' },
  ];

  const howItWorks = [
    {
      step: '01',
      icon: Rocket,
      title: 'ƒêƒÉng k√Ω t√†i kho·∫£n',
      description: 'T·∫°o t√†i kho·∫£n mi·ªÖn ph√≠ ch·ªâ trong 30 gi√¢y v√† b·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·∫≠p',
    },
    {
      step: '02',
      icon: Target,
      title: 'Ch·ªçn l·ªô tr√¨nh ph√π h·ª£p',
      description: 'L√†m b√†i test ƒë·∫ßu v√†o ƒë·ªÉ h·ªá th·ªëng g·ª£i √Ω l·ªô tr√¨nh h·ªçc ph√π h·ª£p v·ªõi tr√¨nh ƒë·ªô',
    },
    {
      step: '03',
      icon: Brain,
      title: 'H·ªçc t·∫≠p ƒë·ªÅu ƒë·∫∑n',
      description: 'Ho√†n th√†nh b√†i h·ªçc h√†ng ng√†y, t√≠ch l≈©y XP v√† m·ªü kh√≥a th√†nh t√≠ch m·ªõi',
    },
    {
      step: '04',
      icon: Trophy,
      title: 'ƒê·∫°t m·ª•c ti√™u',
      description: 'Theo d√µi ti·∫øn ƒë·ªô, nh·∫≠n huy hi·ªáu v√† n√¢ng cao tr√¨nh ƒë·ªô ti·∫øng Anh',
    },
  ];

  const learningPaths = [
    {
      level: 'Beginner',
      title: 'C∆° b·∫£n',
      description: 'D√†nh cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu h·ªçc ti·∫øng Anh',
      color: 'from-green-400 to-green-600',
      features: ['500+ t·ª´ v·ª±ng c∆° b·∫£n', 'Ng·ªØ ph√°p n·ªÅn t·∫£ng', '20 b√†i h·ªçc t∆∞∆°ng t√°c'],
      icon: 'üå±',
    },
    {
      level: 'Intermediate',
      title: 'Trung c·∫•p',
      description: 'Ph√°t tri·ªÉn k·ªπ nƒÉng giao ti·∫øp v√† ng·ªØ ph√°p',
      color: 'from-blue-400 to-blue-600',
      features: ['1000+ t·ª´ v·ª±ng n√¢ng cao', 'Ng·ªØ ph√°p chuy√™n s√¢u', '40 b√†i h·ªçc th·ª±c h√†nh'],
      icon: 'üöÄ',
      popular: true,
    },
    {
      level: 'Advanced',
      title: 'N√¢ng cao',
      description: 'Ho√†n thi·ªán v√† th√†nh th·∫°o ti·∫øng Anh',
      color: 'from-purple-400 to-purple-600',
      features: ['2000+ t·ª´ v·ª±ng chuy√™n ng√†nh', 'Writing & Speaking', '60 b√†i h·ªçc chuy√™n s√¢u'],
      icon: '‚≠ê',
    },
  ];

  const testimonials = [
    {
      name: 'Nguy·ªÖn VƒÉn A',
      role: 'Sinh vi√™n',
      avatar: 'üë®‚Äçüéì',
      content: 'English Smart ƒë√£ gi√∫p t√¥i c·∫£i thi·ªán ti·∫øng Anh r·∫•t nhi·ªÅu. H·ªá th·ªëng gamification khi·∫øn vi·ªác h·ªçc tr·ªü n√™n th√∫ v·ªã v√† kh√¥ng nh√†m ch√°n!',
      rating: 5,
    },
    {
      name: 'Tr·∫ßn Th·ªã B',
      role: 'Nh√¢n vi√™n vƒÉn ph√≤ng',
      avatar: 'üë©‚Äçüíº',
      content: 'T√¥i y√™u th√≠ch t√≠nh nƒÉng theo d√µi ti·∫øn ƒë·ªô v√† streak. N√≥ t·∫°o ƒë·ªông l·ª±c ƒë·ªÉ t√¥i h·ªçc ƒë·ªÅu ƒë·∫∑n m·ªói ng√†y.',
      rating: 5,
    },
    {
      name: 'L√™ Minh C',
      role: 'H·ªçc sinh THPT',
      avatar: 'üë®‚Äçüéì',
      content: 'C√°c b√†i t·∫≠p t∆∞∆°ng t√°c v√† di·ªÖn ƒë√†n c·ªông ƒë·ªìng r·∫•t h·ªØu √≠ch. ƒêi·ªÉm thi c·ªßa t√¥i ƒë√£ tƒÉng ƒë√°ng k·ªÉ sau 3 th√°ng!',
      rating: 5,
    },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary-50 via-green-50 to-white-50">
      {/* HERO SECTION */}
      <section className="relative overflow-hidden bg-gradient-to-b from-primary/5 via-white to-white">
        <div className="absolute inset-0 bg-grid-pattern opacity-5" />
        <div className="container mx-auto px-4 sm:px-6 lg:px-8 pt-20 pb-24 relative">
          <div className="max-w-4xl mx-auto text-center space-y-8">
            {/* Badge */}
            <div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border-2 border-primary/20 shadow-sm animate-in fade-in slide-in-from-top duration-500">
              <Trophy className="w-4 h-4 text-primary" />
              <span className="text-sm font-medium text-gray-700">
                H·ªçc ti·∫øng Anh v·ªõi gamification
              </span>
            </div>

            {/* Heading */}
            <h1 className="text-5xl md:text-7xl font-bold text-gray-900 leading-tight animate-in fade-in slide-in-from-bottom duration-700">
              N√¢ng cao ti·∫øng Anh{' '}
              <span className="text-primary">c·ªßa b·∫°n</span>{' '}
              m·ªói ng√†y
            </h1>

            {/* Subheading */}
            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed animate-in fade-in slide-in-from-bottom duration-700 delay-100">
              Tr·∫£i nghi·ªám h·ªçc ti·∫øng Anh th√∫ v·ªã v·ªõi gamification, theo d√µi ti·∫øn tr√¨nh chi ti·∫øt
              v√† c·ªông ƒë·ªìng h·ªçc vi√™n nƒÉng ƒë·ªông. H·ªçc m·ªçi l√∫c, m·ªçi n∆°i v·ªõi English Smart.
            </p>

            {/* CTAs */}
            <div className="flex flex-col sm:flex-row items-center justify-center gap-4 animate-in fade-in slide-in-from-bottom duration-700 delay-200">
              <Link
                to="/register"
                className="w-full sm:w-auto px-8 py-4 bg-primary text-white text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl hover:bg-primary/90 transition-all duration-200 hover:scale-105 active:scale-95 flex items-center justify-center gap-2"
              >
                B·∫Øt ƒë·∫ßu mi·ªÖn ph√≠
                <ArrowRight className="w-5 h-5" />
              </Link>
              <a
                href="#features"
                className="w-full sm:w-auto px-8 py-4 bg-white text-gray-700 text-lg font-semibold rounded-lg border-2 border-gray-200 hover:border-primary hover:text-primary transition-all duration-200 hover:scale-105 active:scale-95"
              >
                T√¨m hi·ªÉu th√™m
              </a>
            </div>

            {/* Stats */}
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-6 max-w-3xl mx-auto pt-12 animate-in fade-in slide-in-from-bottom duration-700 delay-300">
              {stats.map((stat, index) => (
                <div
                  key={index}
                  className="flex flex-col items-center gap-2 p-4 rounded-lg bg-white border border-gray-100 shadow-sm hover:shadow-md transition-all duration-200"
                >
                  <stat.icon className="w-6 h-6 text-primary" />
                  <div className="text-2xl font-bold text-gray-900">{stat.value}</div>
                  <div className="text-sm text-gray-600">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* FEATURES SECTION */}
      <section id="features" className="py-20 bg-muted/30">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center max-w-3xl mx-auto mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              T·∫•t c·∫£ nh·ªØng g√¨ b·∫°n c·∫ßn ƒë·ªÉ{' '}
              <span className="text-primary">th√†nh th·∫°o ti·∫øng Anh</span>
            </h2>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {features.map((feature, index) => (
              <div
                key={index}
                className={`p-6 bg-white rounded-lg border-2 border-gray-100 ${feature.borderColor} hover:shadow-lg transition-all duration-300 hover:scale-105 group`}
              >
                <div className={`w-12 h-12 ${feature.bgColor} rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300`}>
                  <feature.icon className={`w-6 h-6 ${feature.color}`} />
                </div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  {feature.title}
                </h3>
                <p className="text-gray-600 text-sm leading-relaxed">
                  {feature.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* HOW IT WORKS SECTION */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center max-w-3xl mx-auto mb-16">
            <div className="inline-flex items-center gap-2 px-4 py-2 bg-primary/10 rounded-full border border-primary/20 mb-4">
              <Sparkles className="w-4 h-4 text-primary" />
              <span className="text-sm font-semibold text-primary">ƒê∆°n gi·∫£n v√† hi·ªáu qu·∫£</span>
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              B·∫Øt ƒë·∫ßu h·ªçc{' '}
              <span className="text-primary">ch·ªâ v·ªõi 4 b∆∞·ªõc</span>
            </h2>
            <p className="text-lg text-gray-600">
              Quy tr√¨nh h·ªçc t·∫≠p ƒë∆∞·ª£c thi·∫øt k·∫ø t·ªëi ∆∞u ƒë·ªÉ b·∫°n ƒë·∫°t hi·ªáu qu·∫£ cao nh·∫•t
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {howItWorks.map((item, index) => (
              <div key={index} className="relative group">
                {/* Connecting line */}
                {index < howItWorks.length - 1 && (
                  <div className="hidden lg:block absolute top-16 left-full w-full h-0.5 bg-gradient-to-r from-primary/30 to-transparent -translate-x-1/2 z-0" />
                )}
                
                <div className="relative bg-white p-6 rounded-2xl border-2 border-gray-100 hover:border-primary/30 hover:shadow-xl transition-all duration-300 group-hover:scale-105 z-10">
                  {/* Step number */}
                  <div className="absolute -top-4 -left-4 w-12 h-12 bg-gradient-to-br from-primary to-primary/70 rounded-xl flex items-center justify-center text-white font-bold text-lg shadow-lg">
                    {item.step}
                  </div>
                  
                  {/* Icon */}
                  <div className="w-16 h-16 bg-gradient-to-br from-primary/10 to-secondary/10 rounded-2xl flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300 mx-auto">
                    <item.icon className="w-8 h-8 text-primary" />
                  </div>
                  
                  {/* Content */}
                  <h3 className="text-xl font-bold text-gray-900 mb-3 text-center">
                    {item.title}
                  </h3>
                  <p className="text-gray-600 text-sm leading-relaxed text-center">
                    {item.description}
                  </p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      

      {/* GAMIFICATION SECTION */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center max-w-3xl mx-auto mb-12">
            <div className="inline-flex items-center gap-2 px-4 py-2 bg-primary/10 rounded-full border border-primary/20 mb-4">
              <Sparkles className="w-4 h-4 text-primary" />
              <span className="text-sm font-semibold text-primary">Gamification</span>
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              H·ªçc t·∫≠p <span className="text-primary">tr·ªü n√™n th√∫ v·ªã</span>
            </h2>
            <p className="text-lg text-gray-600">
              V·ªõi h·ªá th·ªëng gamification ƒë·ªôc ƒë√°o, m·ªói b√†i h·ªçc ƒë·ªÅu mang l·∫°i tr·∫£i nghi·ªám h·∫•p d·∫´n
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
            {gamificationFeatures.map((feature, index) => (
              <div
                key={index}
                className="p-6 bg-muted/30 rounded-xl border-2 border-gray-100 hover:border-primary/30 hover:shadow-lg transition-all duration-300 text-center"
              >
                <div className="w-14 h-14 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <feature.icon className="w-7 h-7 text-primary" />
                </div>
                <h3 className="text-lg font-bold text-gray-900 mb-2">
                  {feature.title}
                </h3>
                <p className="text-sm text-gray-600">{feature.description}</p>
              </div>
            ))}
          </div>

          {/* Simple Stats Preview */}
          <div className="mt-12 p-8 bg-muted/30 rounded-2xl border-2 border-gray-100 max-w-2xl mx-auto">
            <div className="flex items-center justify-center gap-2 mb-6">
              <Trophy className="w-5 h-5 text-primary" />
              <span className="text-sm font-semibold text-gray-700">Theo d√µi ti·∫øn ƒë·ªô c·ªßa b·∫°n</span>
            </div>
            
            <div className="grid grid-cols-3 gap-6">
              <div className="text-center">
                <div className="text-3xl font-bold text-primary mb-1">15</div>
                <div className="text-xs text-gray-600">Ng√†y streak</div>
              </div>
              <div className="text-center">
                <div className="text-3xl font-bold text-primary mb-1">12</div>
                <div className="text-xs text-gray-600">Huy hi·ªáu</div>
              </div>
              <div className="text-center">
                <div className="text-3xl font-bold text-primary mb-1">89%</div>
                <div className="text-xs text-gray-600">Ch√≠nh x√°c</div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* TESTIMONIALS SECTION */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center max-w-3xl mx-auto mb-12">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              H·ªçc vi√™n n√≥i g√¨ v·ªÅ{' '}
              <span className="text-primary">English Smart</span>
            </h2>
            <p className="text-lg text-gray-600">
              H√†ng ng√†n h·ªçc vi√™n ƒë√£ c·∫£i thi·ªán ti·∫øng Anh c√πng ch√∫ng t√¥i
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {testimonials.map((testimonial, index) => (
              <div
                key={index}
                className="bg-white p-6 rounded-xl border-2 border-gray-100 hover:border-primary/30 hover:shadow-lg transition-all duration-300"
              >
                {/* Rating */}
                <div className="flex gap-1 mb-4">
                  {[...Array(testimonial.rating)].map((_, i) => (
                    <Star key={i} className="w-4 h-4 text-yellow-400 fill-yellow-400" />
                  ))}
                </div>

                {/* Content */}
                <p className="text-gray-700 text-sm leading-relaxed mb-6">
                  "{testimonial.content}"
                </p>

                {/* Author */}
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center text-xl">
                    {testimonial.avatar}
                  </div>
                  <div>
                    <div className="font-semibold text-gray-900 text-sm">{testimonial.name}</div>
                    <div className="text-xs text-gray-500">{testimonial.role}</div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA SECTION */}
      <section className="py-20 bg-primary/5">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto text-center space-y-8">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900">
              S·∫µn s√†ng b·∫Øt ƒë·∫ßu{' '}
              <span className="text-primary">h√†nh tr√¨nh h·ªçc ti·∫øng Anh?</span>
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              Tham gia c√πng h√†ng ng√†n h·ªçc vi√™n ƒëang c·∫£i thi·ªán ti·∫øng Anh m·ªói ng√†y
            </p>
            <Link
              to="/register"
              className="inline-flex items-center gap-2 px-8 py-4 bg-primary text-white text-lg font-semibold rounded-lg shadow-lg hover:shadow-xl hover:bg-primary/90 transition-all duration-200 hover:scale-105 active:scale-95"
            >
              B·∫Øt ƒë·∫ßu ngay - Mi·ªÖn ph√≠
              <ArrowRight className="w-5 h-5" />
            </Link>
          </div>
        </div>
      </section>
    </div>
  );
};

export default LandingPage;
           

